/**************************************************
                * C# Windows Forms *
***************************************************/

/***************************************************
* 날짜 : 2017.10.23
* 목표 : 윈폼 학습 시작.
             ******* 코멘트 *******
참고자료 http://www.csharpstudy.com/
아마 실습 위주. 그러니까 컴포넌트들을 만들어 보고, 그 소스를 들여다보고... 사용법을 알아보고.
따로 필기할 내용이 많을진 모르겠음.
일별로 각 컴포넌트들을 뭉텅이로 배워보고,
마지막엔 생각해놓은 응용 프로그램(이름은 아마 DZipper/되짚어 가 되지 않을까)의 UI를 디자인하는걸로 하자.

기본적으로 몹시 인간-친화적인 작업 환경이라고 생각함. Visual Studio에서 윈폼을 다루는게.
Eclipse에서 swing하는건, 물론 그런 기능을 제공하는 플러그인같은게 있었을수도 있지만, 영 어려웠는데...

Visual Studio에서 윈폼 프로젝트를 생성했을때 만들어지는 주요 파일은 다음과 같다.
**Program.cs
Main() 메서드가 존재하는 프로그램의 몸체. 간단히 말해 메인 클래스.
**Form1.cs
프로그램 시작시 호출되는 기본 UI 화면 클래스. VS에서 코드 형태로 볼 수도 있고,
Form1.Designer.cs의 내용을 기반으로 랜더링 해 디자이너 형태로 볼 수도 있다.
주로 UI의 이벤트를 핸들링하는 코드들을 적게된다고한다.
**Form1.Designer.cs
Form1의 컴포넌트들에 대한 정보를 가진 클래스. Form1 클래스는 사실 partial로 선언되어서
이 Form1.Designer.cs와 Form1.cs에 나눠서 정의된다.

호출 순서를 한번 살펴보자.
먼저 메인 클래스에서 Application 클래스의 static 메소드로 어플리케이션에 대한 설정을 마친 후
Application.Run(new Form1()); 으로 Form1 클래스 인서턴스를 생성한다.
Form1의 생성자는 Form1.cs에서 정의되고, InitializeComponent();라는 private 메서드를 하나 호출한다.
InitializeComponent()는 Form1.Designer.cs에 정의되고 메서드명 그대로 컴포넌트를 초기화한다.

Form1.Designer.cs 코드를 살펴보면 InitializeComponent()는 사실 #region으로 숨겨져있다.
#region Windows Form 디자이너에서 생성한 코드
그리고 친절히 편집기로 이 코드를 수정하지 말라고 설명까지 해놨다. 우린 그냥 Form1.cs의 디자이너 화면에서
마우스 드래그&드롭으로 컴포넌트를 배치하고, 속성값을 변경해주면 된다는것.
설명만 들어도 몹시 쉬운 과정이 될 것 같지 않나?
물론 이벤트 처리하고 그런건 코드에서 해결해야 할테지만.
오늘은 가벼운 마음으로 여기까지.
***************************************************/